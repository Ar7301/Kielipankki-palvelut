- name: Prepare Matomo Directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ matomo_dir }}"
    - "{{ matomo_work_dir }}"

- name: Determine Latest Stable Version of Matomo
  block:
    - name: Fetch latest version number
      ansible.builtin.uri:
        url: https://builds.matomo.org/LATEST_5X
        return_content: true
      register: fetched_matomo_version
      check_mode: no
    - name: Decode latest version number
      ansible.builtin.set_fact:
        matomo_latest_version: "{{ fetched_matomo_version.content }}"

- name: Check Matomo Installation Version
  block:
    - name: Check if Matomo is installed
      ansible.builtin.stat:
        path: "{{ matomo_deploy_dir }}/console"
      register: matomo_installation
    - name: Fetch installed version
      ansible.builtin.command: "'{{ matomo_deploy_dir }}/console' core:version"
      register: matomo_installed_version_output
      check_mode: no
      when: matomo_installation.stat.exists
    - name: Decode installed version number
      ansible.builtin.set_fact:
        matomo_installed_version: "{{ matomo_installed_version_output.stdout }}"
      when: matomo_installed_version_output is defined

- name: Print Matomo versions
  ansible.builtin.debug:
    msg: >
      Latest stable version of Matomo is: {{ matomo_latest_version | default('UNKNOWN') }} and
      installed version is: {{ matomo_installed_version | default('UNKNOWN') }}

- name: Manage Matomo Installation
  block:
    - name: Download and Unzip the latest version
      when: not ansible_check_mode
      ansible.builtin.unarchive:
        remote_src: true
        src: "https://builds.matomo.org/matomo-{{ matomo_latest_version }}.zip"
        dest: "{{ matomo_work_dir }}"
        owner: "{{ matomo_user }}"
        group: "{{ matomo_group }}"
    - name: Upgrade if necessary
      when: matomo_installed_version is defined
      ansible.builtin.command:
        cmd: "'{{ matomo_deploy_dir }}/console' core:update"
      become: true
      become_user: "{{ matomo_user }}"
  when: matomo_installed_version is undefined or matomo_installed_version != matomo_latest_version

- name: Link deployment directory from docroot
  ansible.builtin.file:
    path: "{{ matomo_symlink }}"
    src: "{{ matomo_deploy_dir }}"
    state: link

- import_tasks: services.yml
