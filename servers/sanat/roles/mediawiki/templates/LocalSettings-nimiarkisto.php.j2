<?php

$wgSitename = 'Nimiarkisto';

$wgDBserver = '{{ instance.value.db.server_host }}';
$wgDBuser = '{{ instance.value.db.user }}';
$wgDBpassword = '{{ instance.value.db.password }}';
$wgDBname = '{{ instance.value.db.database }}';

$wgDefaultSkin = 'Timeless';
$wgLogos = [ '1x' => ' ' ];

wfLoadSkin( 'Timeless' );
wfLoadExtensions( [
	'CodeEditor',
	'Maps',
	'Nimiarkisto',
	'Scribunto',
	'UniversalLanguageSelector',
] );

$wgNimiarkistoMapProxy['key'] = '{{ nimiarkisto_mapproxy_key }}';

require_once "$IP/extensions/Wikibase/repo/Wikibase.php";
require_once "$IP/extensions/Wikibase/repo/ExampleSettings.php";
require_once "$IP/extensions/Wikibase/client/WikibaseClient.php";
require_once "$IP/extensions/Wikibase/client/ExampleSettings.php";

// Avoid conflict with SMW namespaces.
$wgExtraNamespaces[WB_NS_PROPERTY] = 'Wikibase_property';
$wgExtraNamespaces[WB_NS_PROPERTY_TALK] = 'Wikibase_property_talk';
$wgWBRepoSettings['termboxEnabled'] = false;
// the special group includes all the sites in the specialSiteLinkGroups,
// grouped together in a 'Pages linked to other sites' section.
$wgWBRepoSettings['siteLinkGroups'] = [ 'special' ];
// these are the site_group codes as listed in the sites table
$wgWBRepoSettings['specialSiteLinkGroups'] = [ 'special' ];
// has to be http
$wgWBRepoSettings['conceptBaseUri'] = 'http://nimiarkisto.fi/entity/';
$wgLocalInterwikis[] = 'nimiarkisto';

$wgHooks['GetLocalURL'][] = function ( &$title, &$url, $query ) {
	if ( !$title->isExternal() && $query === '' && $title->getPrefixedText() === 'Toiminnot:EntityData' ) {
		$url = str_replace( '/wiki/Toiminnot:', '/wiki/Special:', $url );
	}
};

wfLoadExtension( 'Flow' );
$wgNamespaceContentModels[NS_TALK] = 'flow-board';

wfLoadExtension( 'ParserFunctions' );
$wgPFEnableStringFunctions = true;

enableSemantics( $VHOST );
$smwgQMaxInlineLimit = 2500;
$smwgQUpperbound = 10000;

$wgAllowDisplayTitle = true;
$wgRestrictDisplayTitle = false;

$wgExtensionFunctions[] = function () {
	global $wgHooks;
	$wgHooks['SpecialPage_initList'][] = function ( &$list ) {
		$list['SearchByProperty'] = 'SpecialBlankPage';
		unset( $list['SearchByProperty'] );
	};
};

wfLoadExtension( 'PageForms' );
$wgPageFormsCacheFormDefinitions = true;
$wgPageFormsCacheAutocompleteValues = true;
$wgPageFormsAutocompleteCacheTimeout = 60 * 60 * 24; // 1 day
$wgPageFormsMaxAutocompleteValues = 20;

$wgGroupPermissions['user']['edit'] = true;
$wgGroupPermissions['user']['view-nimilippu'] = true;
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['sysop']['alledit'] = true;
$wgGroupPermissions['editor']['alledit'] = true;
$wgEmailConfirmToEdit = true;

for ( $i = 0; $i < 100000; $i++ ) {
	if ( in_array( $i, [ NS_TALK, NS_USER, NS_USER_TALK, NS_MEDIAWIKI, 2600 ] ) ) {
		continue;
	}
	$wgNamespaceProtection[$i] = 'alledit';
}
$wgGrantPermissions['editpage']['alledit'] = true;

wfLoadExtension( 'WikiEditor' );
$wgDefaultUserOptions['usebetatoolbar'] = 1;

wfLoadExtension( 'FileSystemImageServer' );
$wgFSISGroups['Kotus'] = [
	'path' => '/data/NA1',
	'right' => 'view-nimilippu',
	'mimetypes' => 'image/jpeg',
	'fallback' => '/www/nimiarkisto.fi/docroot/fallback.png',
];

$wgHooks['SkinTemplateOutputPageBeforeExec'][] = function( $sk, &$tpl ) {
	$tpl->set( 'kotus', '<a href="https://www.kotus.fi">Kotimaisten kielten keskus</a>' );
	$tpl->data['footerlinks']['places'][] = 'kotus';
};

$wgPageFormsMaxAutocompleteValues = 15;
$wgPageFormsMaxLocalAutocompleteValues = 10;
$smwgValueLookupCacheLifetime = 60 * 60 * 2; // Default week
$smwgQueryResultCacheType = CACHE_MEMCACHED;
$smwgQueryResultCacheLifetime = 60 * 60 * 2; // Default week
$smwgQueryResultNonEmbeddedCacheLifetime = 60 * 10; // Default ten minutes
$smwgEnabledQueryDependencyLinksStore = false;
// https://phabricator.wikimedia.org/T193246
$wgUpdateRowsPerJob = 2000;
$wgUpdateRowsPerQuery = 500;

wfLoadExtension( 'OAuth' );
$wgMWOAuthSecureTokenTransfer = true;
$wgGroupPermissions['user']['mwoauthproposeconsumer'] = true;
$wgGroupPermissions['user']['mwoauthupdateownconsumer'] = true;
$wgGroupPermissions['oauthadmin']['mwoauthmanageconsumer'] = true;
$wgOAuthGroupsToNotify = [ 'oauthadmin' ];

wfLoadExtension( 'WikibaseStatementUpdater' );

$wgWSUClientConfig = [
	'key' => '{{ nimiarkisto_wikibasestatementupdater_key }}',
	'secret' => '{{ nimiarkisto_wikibasestatementupdater_secret }}',
];
