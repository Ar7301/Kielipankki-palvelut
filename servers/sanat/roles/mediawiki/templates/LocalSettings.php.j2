<?php
# {{ ansible_managed }}

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

$IP = __DIR__;

# The version of Apache on CENTOS is too old to set environment variables.
# And it does not seem to provide the canonical domain name either. So
# dig out the canonical name from the webroot.
if ( isset( $_ENV['DOCUMENT_ROOT'] ) ) {
	$VHOST = preg_replace( '~^/www/([^/]+)/docroot$~', '\1', $_ENV['DOCUMENT_ROOT'] );
} elseif ( defined( 'MW_DB' ) ) {
	# Set by --wiki parameter for scripts
	$VHOST = MW_DB;
} else {
	echo "Wiki instance must be given. Use --wiki parameter for command line scripts.\n";
	exit();
}

if ( !file_exists( __DIR__ . "/LocalSettings-$VHOST.php" ) ) {
	$VHOST = htmlspecialchars( $VHOST );
	echo "Unknown wiki instance $VHOST\n";
	exit();
}

$wgServer = $wgCanonicalServer = "https://$VHOST";

ini_set( 'error_log', "/www/$VHOST/logs/error_php" );
ini_set( 'display_errors',         1 );
ini_set( 'ignore_repeated_errors', 1 );
ini_set( 'log_errors',             1 );
ini_set( 'expose_php',             0 );
ini_set( 'memory_limit',      '350M' );
ini_set( 'max_execution_time', '60s' );

error_reporting( E_ALL | E_STRICT );
date_default_timezone_set( 'UTC' );

$wgShowExceptionDetails  = true;
$wgDebugComments         = true;
$wgDevelopmentWarnings   = true;
$wgDebugTimestamps       = true;
$wgDebugPrintHttpHeaders = false;

$wgCacheDirectory = "/www/$VHOST/cache";
$wgLocalisationCacheConf['store'] = 'file';
$wgLocalisationCacheConf['manualRecache'] = true;
$wgLocalisationCacheConf['storeDirectory'] = "$IP/cache/$VHOST";

$wgSecretKey = file_get_contents( "/www/$VHOST/secretkey" );

$wgArticlePath = "/wiki/$1";
$wgScriptPath = "/w";

## Database settings
$wgDBtype = "mysql";

$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

## Shared memory settings
$wgMainCacheType = CACHE_MEMCACHED;
$wgMemCachedServers = array( 'localhost:11211' );
$wgSessionsInObjectCache = true;

$wgShellLocale = "en_US.utf8";
$wgDiff3 = "/usr/bin/diff3";
$wgJobRunRate = 0;

$wgLanguageCode = 'fi';
$wgDefaultUserOptions['usenewrc'] = 1;
$wgIncludejQueryMigrate = true;

$wgGroupPermissions['sysop']['invitesignup'] = true;
$wgGroupPermissions['*']['edit'] = true;
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['sysop']['deletebatch'] = true;
$wgGroupPermissions['*']['viewedittab'] = true;
$wgGroupPermissions['sysop']['viewedittab'] = true;
$wgDisableAnonEdit = false;
$wgGroupPermissions['*']['createpage'] = true;

$wgUseRCPatrol = false;
$wgUseNPPatrol = false;

$wgEnableUploads = true;
$wgUploadPath = "/uploads";
$wgUploadDirectory = "/www/$VHOST/docroot/uploads";
$wgMaxImageArea = 75e6; // 75MP

function lfAddNamespace( $id, $name ) {
	global $wgExtraNamespaces, $wgContentNamespaces, $wgNamespacesToBeSearchedDefault,
		$wgCapitalLinkOverrides, $smwgNamespacesWithSemanticLinks;

	$constant = strtoupper( "NS_$name" );

	define( $constant, $id );
	define( $constant . '_TALK', $id + 1 );

	$wgExtraNamespaces[$id] = $name;
	$wgExtraNamespaces[$id + 1] = $name . '_talk';

	$wgContentNamespaces[] = $id;

	$wgNamespacesToBeSearchedDefault[$id] = true;
	$wgCapitalLinkOverrides[$id] = false;
	$wgCapitalLinkOverrides[$id + 1] = false;

	$smwgNamespacesWithSemanticLinks[$id] = true;
}

require __DIR__ . "/LocalSettings-$VHOST.php";


# Some non-configurable changes to MediaWiki
$wgHooks['GetLocalURL'][] = function ( &$title, &$url, $query ) {
	if ( !$title->isExternal() && $query == '' && $title->isMainPage() ) {
		$url = '/';
	}
};

$wgHooks['TestCanonicalRedirect'][] = function ( $request ) {
	return $request->getRequestURL() !== '/';
};

# This must be in the parent directory, because everything under workdir can be wiped out
# by the ansible scripts. This enables easier development by allowing changing stuff without
# running the slow scripts, as well as keeping those changes.
if ( file_exists( '/srv/mediawiki/LocalLocalSettings.php' ) ) {
	require '/srv/mediawiki//LocalLocalSettings.php';
}
