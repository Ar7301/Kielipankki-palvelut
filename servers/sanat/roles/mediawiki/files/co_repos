#!/bin/bash

set -e
declare -a REPOS

REPOS=(
	"workdir https://github.com/wikimedia/mediawiki.git origin/REL1_29"
	"workdir/extensions/DeleteBatch https://github.com/wikimedia/mediawiki-extensions-DeleteBatch.git origin/REL1_29"
	"workdir/extensions/FinnFrameNet https://github.com/Nikerabbit/mediawiki-extensions-FinnFrameNet.git origin/master"
	"workdir/extensions/InputBox https://github.com/wikimedia/mediawiki-extensions-InputBox.git origin/REL1_29"
	"workdir/extensions/Kotus https://github.com/Nikerabbit/mediawiki-extensions-Kotus.git origin/master"
	"workdir/extensions/Lud https://github.com/Nikerabbit/mediawiki-extensions-Lud.git origin/master"
	"workdir/extensions/Maps https://github.com/JeroenDeDauw/Maps.git 4.3.0"
	"workdir/extensions/MixedNamespaceSearchSuggestions https://github.com/wikimedia/mediawiki-extensions-MixedNamespaceSearchSuggestions.git origin/REL1_29"
	"workdir/extensions/PageForms https://github.com/wikimedia/mediawiki-extensions-PageForms.git 4.1.2"
	"workdir/extensions/ParserFunctions https://github.com/wikimedia/mediawiki-extensions-ParserFunctions.git origin/REL1_29"
	"workdir/extensions/Sanat https://github.com/Nikerabbit/mediawiki-extensions-Sanat.git origin/master"
	"workdir/extensions/SemanticMediaWiki https://github.com/SemanticMediaWiki/SemanticMediaWiki.git 2.5.4"
	"workdir/extensions/Translate https://github.com/wikimedia/mediawiki-extensions-Translate.git 2017.07"
	"workdir/extensions/Wikibase https://github.com/wikimedia/mediawiki-extensions-Wikibase.git origin/master"
	"workdir/extensions/WordNet https://github.com/Nikerabbit/mediawiki-extensions-WordNet.git origin/master"
	"workdir/skins/Vector https://github.com/wikimedia/mediawiki-skins-Vector.git origin/REL1_29"
	"workdir/skins/Timeless https://github.com/wikimedia/mediawiki-skins-Timeless.git origin/REL1_29"
)

for LINE in "${REPOS[@]}"
do
	LINE=($LINE)
	DIR="${LINE[0]}"
	URL="${LINE[1]}"
	VER="${LINE[2]}"

	echo "$DIR"
	if [ -d "$DIR" ]
	then (
		cd "$DIR" || exit
		ACTUALURL="$(git config --get remote.origin.url)"
		if [ "$URL" != "$ACTUALURL" ]
		then
			echo "Re-cloning repository $DIR";
			cd ..
			rm -rf "$DIR"
		fi
	) fi

	if [ ! -d "$DIR" ]
	then
		git clone "$URL" "$DIR" || exit
	fi

	(
		cd "$DIR" || exit
		git fetch -q && git fetch -q --tags && git reset -q --hard "$VER" && git clean -q -f -d -e /extensions -e /skins 2>&1 >&-
	)
done
