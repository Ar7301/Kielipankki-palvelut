---
# tasks file for hfst

- name: "Debian/Ubuntu: Install list of packages"
  apt: name={{item}} state=installed
  with_items:
       - libreadline-dev
       - automake
       - flex
       - build-essential
       - swig
       - python3-dev
  when:
    - ansible_os_family == "Debian"
    - is_admin

- name: "RHEL/CentOS: Install list of packages"
  yum: name={{item}} state=installed
  with_items:
       - libreadline-dev
       - automake
       - flex
       - gcc-c++
       - swig
       - python3-dev
  when:
    - ansible_os_family == "RedHat"
    - is_admin


- name: compile_dir directory exists with 0777 permission
  become: no
  file: path={{ compile_dir }}
    mode=0777
    recurse=no
    state=directory

- name: Download and extract tarball
  unarchive:
    src={{ release_url }}/v{{ hfst_version }}/{{ hfst_tarball }}
    dest={{ compile_dir }}
    creates={{ hfst_compile_dir }}
    remote_src=yes

- name: Fix xglib bug in configure
  lineinfile:
    regexp: ^:\)| +\[AC_SUBST\(\[GLIB_CFLAGS\]\)\]\)$
    line: ':)'
    dest: "{{ hfst_compile_dir }}/configure.ac"

- name: Running ./autoreconf -i 
  command: "autoreconf -i"
  args:
    chdir: "{{ hfst_compile_dir }}"
    creates: libtool

# Setting prefix explicitly to be able to replace it later in scripts
- name: Running ./configure 
  command: "./configure --enable-all-tools --with-readline --enable-fsmbook-tests --prefix=/usr/local"
  args:
    chdir: "{{ hfst_compile_dir }}"
    creates: config.log

- name: Running make 
  shell: bash --login -c "module load gcc/4.8.2 && make > MAKE.log"
  args:
    chdir: "{{ hfst_compile_dir }}"
    #creates: MAKE.log

- name: Running  make check 
  shell: bash --login -c "module load gcc/4.8.2 && make check -j 4 > MAKE_CHECK.log"
  args:
    chdir: "{{ hfst_compile_dir }}"
    creates: MAKE_CHECK.log

- name: Fix missing "bin" dir bug in Makefile
  become: no
  file:
    path={{ hfst_install_dir }}/bin
    mode=0775
    recurse=no
    state=directory

- name: Running make install
  shell: "make install prefix={{ hfst_install_dir }} > MAKE_INSTALL.log"
  args:
    chdir: "{{ hfst_compile_dir }}"
    creates: "{{ hfst_install_dir }}/bin/hfst-lookup"

- name: "Python module: Set LIBRARY PATH to fresh compile"
  lineinfile:
    regexp: '^extra_link_arguments = (\[\]|\["-Wl,-rpath=" \+ absolute_libhfst_src_path \+ "/.libs"\])$'
    line: 'extra_link_arguments = ["-Wl,-rpath=" + absolute_libhfst_src_path + "/.libs"]'
    dest: "{{ hfst_compile_dir }}/python/setup.py"  

- name: Building python module
  shell: bash --login -c  "module load swig && module load {{python3_module}} && python3 setup.py build_ext --inplace"
  args:
    chdir: "{{ hfst_compile_dir }}/python"

- name: Installing python module
  shell: bash --login -c  "module load swig && module load {{python3_module}} && python3 setup.py install --prefix={{ hfst_install_dir }} "
  args:
    chdir: "{{ hfst_compile_dir }}/python"

# This is a workaround to be able to compile everything just once
# And install to multiple places

- name: Fix paths in some scripts
  replace:
     dest: "{{ hfst_install_dir }}/bin/{{ item }}"
     regexp: \/usr\/local\/bin\/
     replace: "{{ hfst_install_dir }}/bin/"
  with_items:
    - hfst-foma
    - hfst-foma-wrapper.sh
    - hfst-train-tagger
    - hfst-twolc

- name: Fix permissions (if shared group is set)
  file:
    path={{ hfst_install_dir }}
    group={{ shared_group }}
    mode="g+rwX,o+rX"
    recurse=yes
  when: shared_group is defined