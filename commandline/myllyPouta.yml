# You'll need to download and source your credentials before this will work:
#  https://research.csc.fi/pouta-credentials
#
- name: Create virtual machine on cPouta
  hosts: localhost # The OpenStack Shade modules run by Shade on your local machine.
  connection: local

  vars:
    # These will need changing based on your project
    project_key: kielipouta
    project_sg: kielipouta-sg
    project_security_groups: default,{{ project_sg }} # don't add spaces here!

  tasks:
    - name: Create security group
      os_security_group: name={{ project_sg }}

    - name: Add rule to security group to allow http acess from the internet
      os_security_group_rule:
        security_group: "{{ project_sg }}"
        protocol: tcp
        port_range_min: 80
        port_range_max: 80
        remote_ip_prefix: 0.0.0.0/0

    - name: Add rule to security group to allow https access from the internet
      os_security_group_rule:
        security_group: "{{ project_sg }}"
        protocol: tcp
        port_range_min: 443
        port_range_max: 443
        remote_ip_prefix: 0.0.0.0/0


    - name: Add rule to security group to all ssh from current system
      os_security_group_rule:
        security_group: "{{ project_sg }}"
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        # roughly CSC, U Helsinki, Taito
        remote_ip_prefix: "{{ item }}"
      with_items:
        - "193.166.0.0/16"
        - "128.214.0.0/16"
        - "86.50.166.0/24"


    - name: Create a virtual machine
      register: new_vm
      os_server:
        name: mylly-tools
        image: Ubuntu-16.04
        flavor: standard.small
        key_name: "{{ project_key }}"
        security_groups: "{{ project_security_groups }}"

    - name: Add VM to inventory
      add_host:
        name: new_openstack_vm
        groups: openstack_vms
        ansible_host: "{{ new_vm.server.public_v4 }}"

    - name: wait for SSH connection
      wait_for:
        host: "{{ ansible_host }}"
        state: started
        port: 22
        delay: 10
      delegate_to: localhost
      become: no

- name: Install Language Bank tools
  hosts: new_openstack_vm
  remote_user: cloud-user
  become: no  # sudo to root
  vars:
    - is_admin: true
    - swig3_as_module: no
    - install_prefix: /appl/
    - hfst_version: 3.15.0
    - hfst_ospell_version: 0.5.0
    - finnish_parse_version: 1.0
    - praat_version: 6.0.43
    - nasm_version: 2.13.02
    - finnish_tagtools_version: 1.3.0
    - kaldi_version:
        number: 5.2.5
        githash: 3e57783
#  - ffmpeg_version: see roles/ffmpeg/defaults/main.yml


  pre_tasks:
    - name: Copy public ssh keys
      assemble:
        src: keys
        dest: ~/.ssh/authorized_keys
        remote_src: false
        mode: 0600
        regexp: \.pub$
        validate: '/usr/bin/ssh-keygen -l -f %s'
      become: no

    - name: add gcc7 repo
      become: yes
      apt_repository:
        repo: 'ppa:ubuntu-toolchain-r/test'
        state: present

    - name: Install gcc7
      become: yes
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - gcc-7
        - g++-7

    - name: Set alternatives gcc
      become: yes
      alternatives:
        link: /usr/bin/gcc
        name: gcc 
        path: /usr/bin/gcc-7

    - name: Set alternatives g++
      become: yes
      alternatives:
        link: /usr/bin/g++
        name: g++
        path: /usr/bin/g++-7
    
  roles:
    - { role: hfst, tags: hfst }
    - { role: hfst-morphologies, tags: hfst-morphologies }
#    - { role: hfst-ospell, tags: hfst-ospell }
#    - { role: check-hfst, tags: check-hfst }
    - { role: finnish-parse, branch: master, tags: finnish-parse }
    - { role: praat, branch: master, tags: praat }
    - { role: nasm, tags: nasm }
    - { role: ffmpeg, branch: master, tags: ffmpeg }
    - { role: finnish-tagtools, tags: finnish-tagtools }
#    - { role: kaldi, tags: kaldi }
    - { role: python,  tags: python }

  post_tasks:
    - name: Pack tarball
      archive:
        path: /appl/
        dest: /tmp/kielipankki_tools.tar.bz2
        format: bz2

    - name: Copy tarball to Download
      command: "scp -3 cloud-user@{{ ansible_host }}:/tmp/kielipankki_tools.tar.bz2 korp.csc.fi:/var/www/html/download/.mylly/"
      delegate_to: localhost

    - name: Copy scripts to Download
      command: "scp {{ item }} korp.csc.fi:/var/www/html/download/.mylly/"
      delegate_to: localhost
      with_items:
        - files/mylly/kielipankki_shared_install.sh 
        - /tmp/kielipankki_local_root_install.sh


