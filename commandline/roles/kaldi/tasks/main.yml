---
# tasks file for Kaldi

- name: "Debian/Ubuntu: Install list of packages"
  apt:
    name:
    - subversion
    - libatlas-dev
    - libatlas-base-dev
    state: present
  become: yes
  when:
    - ansible_os_family == "Debian"
    - is_admin

- name: "RHEL/CentOS: Install list of packages"
  yum: 
    name:
    - subversion
    - atlas
    state: present
  become: yes
  when:
    - ansible_os_family == "RedHat"
    - is_admin

- name: Clone Kaldi
  git:
    repo:  "{{ release_url }}"
    dest: "{{ compile_root }}/kaldi/"
    remote: upstream
    force: yes
    version: "{{ kaldi_version.githash }}"

- name: Make Tools
  shell: "{{ compiler_call }} make {{ make_extra_flags }}  > MAKE_TOOLS.log"
  args:
    chdir: "{{ compile_root }}/kaldi/tools"
    #creates: MAKE_TOOLS.log
    
- name: Run configure
  shell: "{{ compiler_call }} ./configure --shared --mkl-root=$MKLROOT > CONFIGURE.log"
  args:
    chdir: "{{ compile_root }}/kaldi/src"
    #creates: CONFIGURE.log

- name: Run make clean / depend
  shell: "{{ compiler_call }} make {{ make_extra_flags }} clean depend > MAKE_DEPEND.log"
  args:
    chdir: "{{ compile_root }}/kaldi/src"
    #creates: MAKE_DEPEND.log

- name: "Run make {{ make_extra_flags }}"
  shell: "{{ compiler_call }} make {{ make_extra_flags }}  > MAKE.log"
  args:
    chdir: "{{ compile_root }}/kaldi/src"
    #creates: MAKE.log

- name: Create installdir structure
  file:
    path: "{{ install_dir }}/{{ item }}"
    state: directory
  with_items:
   - bin
   - lib

- name: Install build dir
  shell: rsync -av --exclude="*.o" --exclude="*.c" --exclude="*.cc" --exclude=".git*" --exclude=".deps/" --exclude="windows/" kaldi/ "{{ install_dir }}/build/"
  args:
    chdir: "{{ compile_root }}/"

- name: Link executables to bin
  shell: for I in `find ../build/src/ -type f -executable \( ! -iname *-egs -and ! -iname *-test -and ! -iname lib*.so \) -print`; do ln -sf $I .; done
  args:
    chdir : "{{ install_dir }}/bin"

- name: Link libraries to lib
  shell: for I in `find ../build/src/ -type f -executable \( -iname lib*.so \) -print` ../build/tools/openfst/lib/libfst.so.7 ; do ln -sf $I .; done
  args:
    chdir : "{{ install_dir }}/lib"

- name: Fix permissions (if shared group is set)
  file:
    path: "{{ install_dir }}/.."
    group: "{{ shared_group }}"
    mode: "g+rwX,o+rX"
    recurse: yes
  when: shared_group is defined





